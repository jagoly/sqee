use("assets/load_cell.chai");

def main() {
    app.OPTION_WindowTitle = "SQEE RPG (test_init.chai)";
    app.OPTION_WindowSize = Vec2U(1280u, 720u);

//    app.settings.mod("rpg_shadfilter", false);
//    app.settings.mod("rpg_shadlarge", false);
//    app.settings.mod("rpg_bloom", false);
//    app.settings.mod("rpg_shafts", 0);
//    app.settings.mod("rpg_ssao", 0);
//    app.settings.mod("rpg_fsaa", 0);

    app.update_options();

    load_cell();

    world.mark_configure_all_components(world.get_RootEntity(), true);
    world.mark_refresh_all_components(world.get_RootEntity(), true);

    world.get_RootEntity().get_child("DiceGroup").add_AnimatorComponent();

    //app.console.print("Welcome to SQEE!");
}


def anim_dice() {
    var animC = world.root.get_child("DiceGroup").get_AnimatorComponent();
    var trnsC = world.root.get_child("DiceGroup").get_TransformComponent();
    var apZ = animC.add_Float(trnsC.position.z); //apZ.repeat = true;
    apZ.values = [0.9f, 1.1f, 0.8f, 1.2f, 0.7f, 1.3f, 0.6f, 1.4f, 0.5f, 1.5f];
    apZ.times = [10u, 4u, 6u, 8u, 10u, 12u, 14u, 16u, 18u, 20u];
}


def add_some_shit() {
    var cell = world.get_cell("Sponza");

    var boxPhys = cell.add_RigBodyBasic("BoxPhys");
    boxPhys.physobj = "Sponza/BigBox";
    boxPhys.refresh();

    var emitterA = cell.add_Emitter("EmitterA");
    emitterA.position = Vec3F(+1.0, 0.0, 2.0);
    emitterA.refresh();

    var emitterB = cell.add_Emitter("EmitterB");
    emitterB.position = Vec3F(-1.0, 0.0, 2.0);
    emitterB.refresh();

    var emitterC = cell.add_Emitter("EmitterC");
    emitterC.position = Vec3F(0.0, 0.0, 1.0);
    emitterC.refresh();

    var emitterGun = cell.add_Emitter("EmitterGun");
    emitterGun.refresh();
    
}


def animate_the_shit() {
    var cell = world.get_cell("Sponza");

    var splat = cell.get_Decal("Splat");
    splat.animAlpha.values = [-1.0f, 0.0f, 1.0f];
    splat.animAlpha.times = [6u, 6u, 36u];
    splat.animAlpha.start();

    var point = cell.get_PointLight("PointCentre");
    point.animColour.values = [Vec3F(1,0,0) - point.colour, point.colour - Vec3F(1,0,0),
                               Vec3F(0,1,0) - point.colour, point.colour - Vec3F(0,1,0),
                               Vec3F(0,0,1) - point.colour, point.colour - Vec3F(0,0,1)];
    point.animIntensity.values = [1.0f, -2.0f, 2.0f, -2.0f, 2.0f, -1.0f];
    point.animColour.times = [6u, 10u, 6u, 10u, 6u, 10u];
    point.animIntensity.times = [6u, 10u, 6u, 10u, 6u, 10u];
    point.animColour.start(); point.animIntensity.start();

    var spotN = cell.get_SpotLight("SpotN");
    spotN.animDirection.values = [Vec3F(2,-1,-1) - spotN.direction, spotN.direction - Vec3F(2,-1,-1),
                                  Vec3F(-2,-1,-1) - spotN.direction, spotN.direction - Vec3F(-2,-1,-1)];
    spotN.animDirection.times = [10u, 14u, 14u, 10u];
    spotN.animDirection.start();

    var spotS = cell.get_SpotLight("SpotS");
    spotS.animDirection.values = [Vec3F(-2,1,-1) - spotS.direction, spotS.direction - Vec3F(-2,1,-1),
                                  Vec3F(2,1,-1) - spotS.direction, spotS.direction - Vec3F(2,1,-1)];
    spotS.animDirection.times = [10u, 14u, 14u, 10u];
    spotS.animDirection.start();

    var pointNE = cell.get_PointLight("PointNE");
    var pointSE = cell.get_PointLight("PointSE");
    var pointSW = cell.get_PointLight("PointSW");
    var pointNW = cell.get_PointLight("PointNW");
    pointNE.animPosition.values = [Vec3F(0,-10,0), Vec3F(-28,0,0), Vec3F(0,10,0), Vec3F(28,0,0)];
    pointSE.animPosition.values = [Vec3F(-28,0,0), Vec3F(0,10,0), Vec3F(28,0,0), Vec3F(0,-10,0)];
    pointSW.animPosition.values = [Vec3F(0,10,0), Vec3F(28,0,0), Vec3F(0,-10,0), Vec3F(-28,0,0)];
    pointNW.animPosition.values = [Vec3F(28,0,0), Vec3F(0,-10,0), Vec3F(-28,0,0), Vec3F(0,10,0)];
    pointNE.animPosition.times = [8u*4, 16u*4, 8u*4, 16u*4]; pointNE.animPosition.start();
    pointSE.animPosition.times = [16u*4, 8u*4, 16u*4, 8u*4]; pointSE.animPosition.start();
    pointSW.animPosition.times = [8u*4, 16u*4, 8u*4, 16u*4]; pointSW.animPosition.start();
    pointNW.animPosition.times = [16u*4, 8u*4, 16u*4, 8u*4]; pointNW.animPosition.start();
}


def puffA(_count) {
    var cell = world.get_cell("Sponza");
    var emitterA = cell.get_Emitter("EmitterA");
    var emitterB = cell.get_Emitter("EmitterB");
    var emitterC = cell.get_Emitter("EmitterC");
    emitterA.emit_puff(_count, Vec3F(-1,0,2), Vec3F(0.8, 0.2, 0.2), 0.2, 0.3, 9.0, 12.0, 1000u, 1600u);
    emitterB.emit_puff(_count, Vec3F(+1,0,2), Vec3F(0.2, 0.8, 0.2), 0.2, 0.3, 9.0, 12.0, 1000u, 1600u);
    emitterC.emit_puff(_count, Vec3F( 0,0,3), Vec3F(0.2, 0.2, 0.8), 0.2, 0.3, 9.0, 12.0, 1000u, 1600u);
}

def puffB(_count) {
    var cell = world.get_cell("Sponza");
    var emitterA = cell.get_Emitter("EmitterA");
    var emitterB = cell.get_Emitter("EmitterB");
    var emitterC = cell.get_Emitter("EmitterC");
    emitterA.emit_puff(_count, Vec3F(0,0,0), Vec3F(1.0, 1.0, 1.0), 0.3, 0.5, 1.0, 1.5, 30u, 60u);
    emitterB.emit_puff(_count, Vec3F(0,0,0), Vec3F(1.0, 1.0, 1.0), 0.3, 0.5, 1.0, 1.5, 30u, 60u);
    emitterC.emit_puff(_count, Vec3F(0,0,0), Vec3F(1.0, 1.0, 1.0), 0.3, 0.5, 1.0, 1.5, 30u, 60u);
}

def puffC(_count) {
    var cell = world.get_cell("Sponza");
    var emitterGun = cell.get_Emitter("EmitterGun");
    var gunDir = Vec3F(camera.direction);
    emitterGun.position = camera.position; emitterGun.refresh();
    emitterGun.emit_puff(_count, gunDir*10.0f, Vec3F(1.0, 1.0, 0.0), 0.2, 0.2, 7.5, 10.0, 75u, 75u);
}


def add_lotsa_dudes() {
    for (var i = 0; i < 10; i += 1) {
        var dudeA = world.get_cell("Sponza").add_ModelSkelly("DudeA"+to_string(i));
        var dudeB = world.get_cell("Sponza").add_ModelSkelly("DudeB"+to_string(i));
        dudeA.position = Vec3F(-5.0 + i, +1.0, 0.0);
        dudeB.position = Vec3F(-5.0 + i, -1.0, 0.0);
        dudeA.rotation = QuatF(0.0, 0.0, -0.707107, 0.707107);
        dudeB.rotation = QuatF(0.0, 0.0, +0.707107, 0.707107);
        dudeA.arma = dudeB.arma = "Characters/Sqeen";
        dudeA.mesh = dudeB.mesh = "Characters/Sqeen";
        dudeA.skin = dudeB.skin = "Characters/Sqeen";
        dudeA.pose = dudeB.pose = "Squatting";
        dudeA.anim = dudeB.anim = "Squats";
        dudeA.shadow = dudeB.shadow = true;
        dudeA.refresh(); dudeB.refresh();
//        dudeA.loop(4u); dudeB.loop(4u);
    }
    
    world.reload_list();
    renderer.reload_lists();
}


def add_some_dice() {
    for (var i = 0; i < 111; i += 1) {
        var dice = world.get_cell("Sponza").add_ModelSimple("Dice"+to_string(i));

        print("FUCK");
        dice.position = Vec3F(3.0, 0.0, float(i)*0.4 + 1.0);
        dice.scale = Vec3F(0.3, 0.3, 0.3);
        dice.mesh = "Test/Dice";
        dice.skin = "Test/Dice";
        dice.shadow = true;
        dice.render = true;
        dice.refresh();

        print("FUCK");

        var phys = world.get_cell("Sponza").add_RigBodyBasic("DiceP"+to_string(i));
        phys.scale = Vec3F(0.3, 0.3, 0.3);
        phys.physobj = "Test/Dice";
        phys.set_ModelSimple(dice);
        phys.refresh();
    }

    world.reload_list();
    renderer.reload_lists();
}


def add_some_balls() {
    for (var i = 0; i < 111; i += 1) {
        var ball = world.get_cell("Sponza").add_ModelSimple("Ball"+to_string(i));
        ball.position = Vec3F(-3.0, 0.0, float(i)*0.4 + 1.0);
        ball.scale = Vec3F(0.3, 0.3, 0.3);
        ball.mesh = "Test/Ball";
        ball.skin = "Test/Ball";
        ball.shadow = true;
        ball.render = true;
        ball.refresh();

        var phys = world.get_cell("Sponza").add_RigBodyBasic("BallP"+to_string(i));
        phys.scale = Vec3F(0.3, 0.3, 0.3);
        phys.physobj = "Test/Ball";
        phys.set_ModelSimple(ball);
        phys.refresh();
    }

    world.reload_list();
    renderer.reload_lists();
}


main();
//add_some_shit();
//add_some_dice();
//add_some_balls();
//add_lotsa_dudes();

var d = world.get_RootEntity().get_child("DicePhys");
